#########################################################
###               INSTALL DEPENDENCIES                ###
#########################################################
- name: Update apt cache
  apt:
    update_cache: yes
  when: ansible_os_family == "Debian"

- name: Ensure required OS packages are installed
  apt:
    name:
      - wget
      - ca-certificates
      - zip
      - net-tools
      - vim
      - nano
      - tar
      - netcat-traditional
      - openjdk-21-jdk
    state: present
  when: ansible_os_family == "Debian"

- name: Disable swap (set vm.swappiness=1)
  sysctl:
    name: vm.swappiness
    value: '1'
    state: present
    sysctl_set: yes
    reload: yes

- name: Persist swappiness setting in /etc/sysctl.conf
  lineinfile:
    path: /etc/sysctl.conf
    line: 'vm.swappiness=1'
    state: present


#########################################################
###                 DOWNLOAD BINARIES                 ###
#########################################################
- name: Download Kafka {{ kafka_version }} from Apache
  get_url:
    url: "{{ kafka_url }}"
    dest: "/tmp/{{ kafka_archive }}"
    mode: '0644'
    force: no

- name: Extract Kafka binaries to /opt/
  unarchive:
    src: "/tmp/{{ kafka_archive }}"
    dest: "/opt/"
    remote_src: yes
    creates: "/opt/kafka_{{ scala_version }}-{{ kafka_version }}"

- name: Rename extracted Kafka folder to {{ kafka_dir }}
  command: mv /opt/kafka_{{ scala_version }}-{{ kafka_version }} {{ kafka_dir }}
  args:
    creates: "{{ kafka_dir }}"

- name: Remove Kafka archive after extraction
  file:
    path: "/tmp/{{ kafka_archive }}"
    state: absent

- name: Create JVM log directory
  file:
    path: "{{ jvm_log_dir }}"
    state: directory
    owner: "{{ kafka_user }}"
    group: "{{ kafka_group }}"
    mode: '0755'
    recurse: yes
